#!/usr/bin/env ruby
require 'pp'

class Tls
  attr_accessor :good_ips
  def initialize(infile = File.expand_path(File.join(File.dirname(__FILE__), '..', 'day', '7', 'input')))
    self.good_ips = []
    File.readlines(infile).each do |line|
      ip = IP.new(line.strip)
      pp [line.strip, ip.non_hypernets, ip.hypernets, ip.tls?]
      self.good_ips << ip if ip.tls?
    end
    puts "TLS IPs: #{self.good_ips.count}"
  end

  class IP
    attr_accessor :non_hypernets, :hypernets
    def initialize(string)
      _parse(string)
    end

    def tls?
      hypernets.each do |h|
        return false if abba?(h)
      end
      non_hypernets.each do |h|
        return true if abba?(h)
      end
      false
    end

    def _parse(string)
      self.hypernets = string.scan(/\[\w+\]/)
      self.hypernets.each do |net|
        net[0] = ''
        net[-1] = ''
      end
      self.non_hypernets = string.split(/\[\w+\]/)
    end

    def abba?(string)
      index = 0
      while(index < string.length - 3)
        slice = string[index..index+3]
        return slice if _abba_helper(slice)
        index += 1
      end
      false
    end

    def _abba_helper(string)
      ab = string[0, string.length/2]
      ba = string[string.length/2, string.length]
      return false if string.length % 2 != 0
      return false if ab == ba
      ab == ba.reverse
    end
  end
end

if __FILE__ == $0
  Tls.new
end
