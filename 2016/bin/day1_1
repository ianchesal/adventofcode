#!/usr/bin/env ruby

class Traveler
  attr_accessor :x, :y, :facing
  def initialize(dirfile = File.expand_path(File.join(File.dirname(__FILE__), '..', 'day', '1', 'input')))
    self.x = 0
    self.y = 0
    self.facing = :north
    puts "Reading #{dirfile}"
    File.read(dirfile).split(/,\s*/).each do |direction|
      travel(direction)
    end
    puts ''
    puts "Final Location: (#{x}, #{y})"
    puts "Distance:       #{x + y}"
  end

  def travel(direction)
    puts "Start:        #{facing} (#{x}, #{y})"
    puts "Direction:    #{direction}"
    t = direction[0]
    distance = direction[1..-1].to_i
    case t.downcase
    when 'l'
      turn_left
    when 'r'
      turn_right
    else
      fail "Unknown direction #{direction}"
    end
    walk(distance)
    puts "End:          #{facing} (#{x}, #{y})"
  end

  def turn_left
    case self.facing
    when :north
      self.facing = :west
    when :east
      self.facing = :north
    when :south
      self.facing = :east
    when :west
      self.facing = :south
    end
  end

  def turn_right
    case self.facing
    when :north
      self.facing = :east
    when :east
      self.facing = :south
    when :south
      self.facing = :west
    when :west
      self.facing = :north
    end
  end

  def walk(distance)
    case self.facing
    when :north
      self.y += distance
    when :east
      self.x += distance
    when :south
      self.y -= distance
    when :west
      self.x -= distance
    end
  end
end

if __FILE__ == $0
  Traveler.new
end
