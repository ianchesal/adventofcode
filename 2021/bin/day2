#!/usr/bin/env ruby
require 'pp'

class Navigate
  attr_accessor :directions
  def initialize(infile = File.expand_path(File.join(File.dirname(__FILE__), '..', 'day', '2', 'input')))
    self.directions = File.readlines(infile)
  end

  def part1()
    depth = 0
    horizontal = 0
    self.directions.each do |line|
      (directive, value) = line.split(/\.?\s+/, 2)
      value = value.to_i
      case directive
      when 'forward'
        horizontal += value
      when 'down'
        depth += value
      when 'up'
        depth -= value
      else
        fail "Unknown directive: #{line}"
      end
    end
    return [depth, horizontal]
  end

  def part2()
    depth = 0
    horizontal = 0
    aim = 0
    self.directions.each do |line|
      (directive, value) = line.split(/\.?\s+/, 2)
      value = value.to_i
      case directive
      when 'forward'
        horizontal += value
        depth = depth + (aim * value)
      when 'down'
        aim += value
      when 'up'
        aim -= value
      else
        fail "Unknown directive: #{line}"
      end
    end
    return [depth, horizontal]
  end
end

if __FILE__ == $0
  n = Navigate.new
  puts "Part 1"
  puts "------"
  (depth, horizontal) = n.part1
  puts "Depth:      #{depth}"
  puts "Horizontal: #{horizontal}"
  puts "Product:    #{depth * horizontal}"
  puts "Part 2"
  puts "------"
  (depth, horizontal) = n.part2
  puts "Depth:      #{depth}"
  puts "Horizontal: #{horizontal}"
  puts "Product:    #{depth * horizontal}"
end
