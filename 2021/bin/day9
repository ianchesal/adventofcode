#!/usr/bin/env ruby
require 'pp'

class HeightMap
  attr_accessor :map
  def initialize(infile = File.expand_path(File.join(File.dirname(__FILE__), '..', 'day', '9', 'input')))
    puts "Loading map data..."
    self.map = []
    File.readlines(infile).each do |line|
      self.map.append(line.chomp.chars.map {|c| c.to_i})
    end
    pp map
    sum = 0
    for x in 0...self.map.length
      for y in 0...self.map[x].length
        if low_point?(x,y)
          puts "Low point at (#{x},#{y}): #{self.map[x][y]}"
          sum += 1 + self.map[x][y]
        end
      end
    end
    puts "Sum of the risk levels is: #{sum}"
  end

  def low_point?(x, y)
    return false if self.map[x][y] >= get_up(x,y)
    return false if self.map[x][y] >= get_down(x,y)
    return false if self.map[x][y] >= get_left(x,y)
    return false if self.map[x][y] >= get_right(x,y)
    return true
  end

  def get_up(x,y)
    return 10 if y == 0
    self.map[x][y-1]
  end

  def get_down(x,y)
    return 10 if y == self.map[x].length-1
    self.map[x][y+1]
  end

  def get_left(x,y)
    return 10 if x == 0
    self.map[x-1][y]
  end

  def get_right(x,y)
    return 10 if x == self.map.length-1
    self.map[x+1][y]
  end
end

if __FILE__ == $0
  HeightMap.new
end
